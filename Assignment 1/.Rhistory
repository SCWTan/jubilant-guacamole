install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2 ,3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create(testdir)
?dir.create()
dir.create(testdir)
dir.create(file.path("testdir"))
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path()
file.path("mytest3.R", 'folder1', 'folder2')
file.path('folder1', 'folder2')
?dir.create
dir.create("testdir2", file.path("testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
dir()
rm -r "testdir/"
rm -r testdir/
rmdir "testdir/"
rmdir testdir
rmdir -r testdir
ls()
dir()
cd testdir
rmdir(testdir)
?rmdir
?unlink
unlink(testdir, TRUE)
unlink("testdir/", TRUE)
play()
cd
dir()
nxt()
1:20
pi:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length = 30)
my_seq - seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1 ,2), each = 10)
num_vexct <- c(0.5, 55, -10, 6)
rm(num_vexct)
num_vect <- c(0.5, 55, -10, 6)
num_vect is less than 1 <- num_vect < 1
"num_vect is less than 1" <- num_vect < 1
tf < num_vect < 1
tf <- num_vect < 1
tf
rm(`num_vect is less than 1`, num_vexct)
rm(`num_vect is less than 1`)
play()
rm(`num_vect is less than 1`)
rm(num_vexct)
nxt()
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse= "")
paste(my_char, collapse= " ")
play()
rm(`num_vect is less than 1`)
rm(num_vexct)
nxt()
rm(`num_vect is less than 1`)
my_name <- c(my_char, "Sebastian")
my_name
paste(my_name)
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- re(NA, 1000)
z<-rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- isna(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>10]
y[y>10]
y[y > 10]
info()
y
y[y > 5]
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <0 c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("food", "bar")]
vect[c("foo", "bar")]
my_vector <- c(`:20`)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attrributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- (1:20, 4, 5)
my_matrix2 <- (data = 1:20, 4, 5)
my_matrix2 <- (data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_vector, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
clear()
clear
exit()
exit
add2 <- function(x, y){
x + y
}
View(example)
add(2, 8)
add2(2, 8)
add2 <- function(x, y){
x + y
}
add2(3, 6)
above <- function(x, n){
use <- x < n
x[use]
}
above(4, 12)
above <- function(x, n = 10){
use <- x < n
x[use]
}
above(x)
above <- function(x, n = 10){
use <- x < n
x[use]
}
above(x, 12)
x <- 1:20
above(x, 12)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(x, 12)
above(x)
means
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, 1])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, 1])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
weekdays(23)
?weekdays
sys.time()
Sys.tim()
Sys.time()
swirl()
install.packages("swirl")
swirl()
ls()
library(swirl)
rm(list=ls())
swirl()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <=10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && C(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
skip()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
INFo()
info()
skip()
d
swirl()
Sys.Date()
mean(c(2, 4, 5))
x
submit
submit()
boring_function('Mu first function!')
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
remainder(10)
source()
submit()
remiander(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std, c(1.4, 3.6, 7.9 8.8))
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){[1]}, c(8, 4, 0))
evaluate(function(x)[1], c(8, 4, 0))
evaluate(function(x)1, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("what", "doing")
submit()
submit()
mad_libs("China", "fun", " minipig")
submit()
submit()
'I', 'love', 'R!'
'I' %p% 'love' %p% 'R!'
swirl()
exit()
info()
bye()
swirl()
exit()
bye()
swirl()
bye()
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass()
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
POSIXllt <- as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
View(example)
View(example)
getwd()
setwd("/Users/seabasstan/Documents/Coursera/Assignment 1")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
directory <- paste(getwd(),"/", directory, "/", sep = "")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
paste(getwd(),"/", directory, "/", sep = "")
paste(getwd(),"/", "specdata", "/", sep = "")
file_list <- list.files(directory)
file_list <- list.files(directory)
directory <- paste(getwd(),"/", "specdata", "/", sep = "")
file_list <- list.files(directory)
source()
source(pollutantmean())
source(pollutantmean.R)
source("pollutantmean.R")
pollutantman("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332){
directory <- paste(getwd(),"/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- NA
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
data <- rbind(data, file_data)
}
mean(data[[pollutant]], na.rm = TRUE)
}
data
print(data)
pollutantmean <- function(directory, pollutant, id = 1:332){
directory <- paste(getwd(),"/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- NA
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
data <- rbind(data, file_data)
}
mean(data[[pollutant]], na.rm = TRUE)
}
(data[[pollutant]])
pollutantmean <- function(directory, pollutant, id = 1:332){
directory <- paste(getwd(),"/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- NA
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
data <- rbind(data, file_data)
}
mean(data[[pollutant]], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id = 1:332){
directory <- paste(getwd(),"/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- NA
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
data <- rbind(data, file_data)
}
(data[[pollutant]])
}
pollutantmean <- function(directory, pollutant, id = 1:332){
directory <- paste(getwd(),"/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- NA
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
data <- rbind(data, file_data)
}
(data[[pollutant]])
}
pollutantmean("specdata", "sulfate", 1:10)
data <- data.frame(matrix(ncol = 2, nrow = 0))
complete <- function(directory, id = 1:332){
directory <- paste(get_wd(), "/", directory, "/", sep = "")
file_list <- list.files(directory)
data <- data.frame(matrix(ncol = 2, nrow = 0))
for (i in id){
file_dir <- paste(directory, file_list[i], sep = "")
file_data <- read.csv(file_dir)
counter <- 0
for (i in file_data){
if (!is.NA(i)){
counter <- counter + 1
}
}
data <- rbind(data, counter)
}
colnames(data) <- c('id', 'nobs')
data
}
complete("specdata, 1")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
